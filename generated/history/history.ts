// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DataAdded extends ethereum.Event {
  get params(): DataAdded__Params {
    return new DataAdded__Params(this);
  }
}

export class DataAdded__Params {
  _event: DataAdded;

  constructor(event: DataAdded) {
    this._event = event;
  }

  get userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get data(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class history extends ethereum.SmartContract {
  static bind(address: Address): history {
    return new history("history", address);
  }

  tokenIdToData(param0: BigInt): string {
    let result = super.call(
      "tokenIdToData",
      "tokenIdToData(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toString();
  }

  try_tokenIdToData(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "tokenIdToData",
      "tokenIdToData(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  userData(param0: Address): string {
    let result = super.call("userData", "userData(address):(string)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toString();
  }

  try_userData(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall("userData", "userData(address):(string)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class AddDataCall extends ethereum.Call {
  get inputs(): AddDataCall__Inputs {
    return new AddDataCall__Inputs(this);
  }

  get outputs(): AddDataCall__Outputs {
    return new AddDataCall__Outputs(this);
  }
}

export class AddDataCall__Inputs {
  _call: AddDataCall;

  constructor(call: AddDataCall) {
    this._call = call;
  }

  get userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get eventTokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class AddDataCall__Outputs {
  _call: AddDataCall;

  constructor(call: AddDataCall) {
    this._call = call;
  }
}
